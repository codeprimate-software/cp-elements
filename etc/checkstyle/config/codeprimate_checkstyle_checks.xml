<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
  "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">
<module name="Checker">

  <property name="charset" value="UTF-8"/>
  <property name="localeCountry" value="${locale.country}" default="US"/>
  <property name="localeLanguage" value="${locale.language}" default="en"/>
  <property name="severity" value="warning"/>

  <!-- Exclude package-info.java and module-info.java files -->
  <module name="BeforeExecutionExclusionFileFilter">
    <property name="fileNamePattern" value="(package|module)\-info\.java$"/>
  </module>

  <!-- Declare Suppressions file to prevent certain Checkstyle Checks (Rules) on Java source code files -->
  <module name="SuppressionFilter">
    <property name="file" value="${checkstyle.suppressions.file}"/>
    <property name="optional" value="true"/>
  </module>

  <module name="SuppressionSingleFilter">
    <property name="checks" value="AbstractClassName"/>
    <property name="files" value="Assert|Constants|ThrowableAssertions|.+Exception|.+Extension(s)??|.+Factory|.+Utils\.java"/>
  </module>

  <module name="SuppressionSingleFilter">
    <property name="checks" value="FinalClass"/>
    <property name="files" value="ClassLocator|GetEnvironmentVariableValue|GetSystemPropertyValue\.java"/>
  </module>

  <module name="SuppressionSingleFilter">
    <property name="checks" value="IllegalThrows"/>
    <property name="files" value="ThrowableAssertions|ThrowableOperation\.java"/>
  </module>

  <module name="SuppressionSingleFilter">
    <property name="checks" value="MagicNumber"/>
    <property name="files" value="SimpleBloomFilter.java"/>
  </module>

  <module name="SuppressionSingleFilter">
    <property name="checks" value="MutableException"/>
    <property name="files" value="SecurityException.java"/>
  </module>

  <module name="SuppressionSingleFilter">
    <property name="checks" value="RegexpSinglelineJava"/>
    <property name="files" value="org[\\/]cp[\\/]elements[\\/]tools[\\/]"/>
  </module>

  <module name="SuppressionSingleFilter">
    <property name="checks" value="RequireThis"/>
    <property name="files" value="ThreadUtils.java"/>
    <property name="message" value="^.+'interval'.+$"/>
  </module>

  <module name="SuppressWarningsFilter"/>

  <module name="FileLength">
    <property name="fileExtensions" value="${checkstyle.FileLength.fileExtensions}" default="java"/>
    <property name="max" value="10000"/>
    <property name="severity" value="warning"/>
  </module>

  <module name="FileTabCharacter"/>

  <module name="JavadocPackage">
    <property name="severity" value="warning"/>
  </module>

  <module name="LineLength">
    <property name="ignorePattern" value="\@see"/>
    <property name="max" value="${checkstyle.LineLength.max}" default="120"/>
    <property name="severity" value="warning"/>
  </module>

  <module name="NewlineAtEndOfFile">
    <property name="lineSeparator" value="${checkstyle.NewlineAtEndOfFile.lineSeparator}" default="lf"/>
  </module>

  <!-- check Headers in all Java source code files -->
  <module name="RegexpHeader">
    <property name="headerFile" value="${checkstyle.header.file}"/>
  </module>

  <module name="RegexpMultiline"/>

  <module name="RegexpSingleline">
    <property name="format" value="\s+$"/>
    <property name="maximum" value="0"/>
    <property name="minimum" value="0"/>
    <property name="message" value="Line has trailing spaces."/>
  </module>

  <module name="Translation"/>

  <module name="UniqueProperties"/>

  <module name="TreeWalker">

    <property name="tabWidth" value="${checkstyle.tabWidth}" default="2"/>

    <!-- Checks for Annotations -->
    <!--module name="AnnotationLocation"/-->
    <!--module name="AnnotationOnSameLine"/-->
    <!--module name="AnnotationUseStyle"/-->
    <module name="MissingDeprecated"/>
    <module name="MissingOverride"/>
    <!--module name="PackageAnnotation"/-->
    <!--module name="SuppressWarnings"/-->
    <!--module name="SuppressWarningsHolder"/-->

    <!-- Checks for Blocks -->
    <module name="AvoidNestedBlocks"/>
    <module name="EmptyBlock"/>
    <module name="EmptyCatchBlock">
      <property name="exceptionVariableName" value="ignore"/>
    </module>
    <module name="LeftCurly"/>
    <module name="NeedBraces"/>
    <module name="RightCurly">
      <property name="option" value="alone_or_singleline"/>
    </module>

    <!-- Checks for Class Design -->
    <module name="DesignForExtension">
      <property name="ignoredAnnotations" value="Override"/>
    </module>
    <module name="FinalClass"/>
    <module name="HideUtilityClassConstructor"/>
    <!--module name="InnerTypeLast"/-->
    <!--module name="InterfaceIsType"/-->
    <module name="MutableException"/>
    <module name="OneTopLevelClass"/>
    <module name="ThrowsCount">
      <property name="max" value="${checkstyle.ThrowsCount.max}" default="3"/>
      <property name="severity" value="warning"/>
    </module>
    <!--module name="VisibilityModifier"/-->

    <!-- Checks for Coding -->
    <!--module name="ArrayTrailingComma"/-->
    <module name="AvoidDoubleBraceInitialization"/>
    <!--module name="AvoidInlineConditionals"/-->
    <module name="AvoidNoArgumentSuperConstructorCall"/>
    <module name="CovariantEquals"/>
    <!--module name="DeclarationOrder"/-->
    <module name="DefaultComesLast"/>
    <module name="EmptyStatement"/>
    <module name="EqualsAvoidNull"/>
    <module name="EqualsHashCode"/>
    <module name="ExplicitInitialization">
      <property name="severity" value="warning"/>
    </module>
    <module name="FallThrough"/>
    <!--module name="FinalLocalVariable"/-->
    <module name="HiddenField">
      <property name="ignoreConstructorParameter" value="true"/>
      <property name="ignoreFormat" value="^this\..+"/>
      <property name="setterCanReturnItsClass" value="true"/>
      <property name="severity" value="warning"/>
    </module>
    <!--module name="IllegalCatch"/-->
    <module name="IllegalInstantiation">
      <property name="classes" value="java.lang.Boolean"/>
      <property name="severity" value="warning"/>
    </module>
    <module name="IllegalThrows">
      <property name="illegalClassNames" value="java.lang.Throwable"/>
      <property name="severity" value="warning"/>
    </module>
    <module name="IllegalToken"/>
    <!--module name="IllegalTokenText"/-->
    <module name="IllegalType"/>
    <module name="InnerAssignment"/>
    <module name="MagicNumber">
      <property name="ignoreNumbers" value="-2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 24, 32, 37, 64, 100, 128, 256, 500, 512"/>
      <property name="ignoreAnnotation" value="true"/>
      <property name="ignoreHashCodeMethod" value="true"/>
    </module>
    <!--module name="MatchXpath"/-->
    <!--module name="MissingCtor"/-->
    <module name="MissingSwitchDefault">
      <property name="severity" value="warning"/>
    </module>
    <module name="ModifiedControlVariable"/>
    <!--module name="MultipleStringLiterals"/-->
    <module name="MultipleVariableDeclarations"/>
    <module name="NestedForDepth">
      <property name="max" value="${checkstyle.NestedForDepth.max}" default="3"/>
      <property name="severity" value="warning"/>
    </module>
    <module name="NestedIfDepth">
      <property name="max" value="${checkstyle.NestedIfDepth.max}" default="4"/>
      <property name="severity" value="warning"/>
    </module>
    <module name="NestedTryDepth">
      <property name="max" value="${checkstyle.NestedTryDepth.max}" default="3"/>
      <property name="severity" value="warning"/>
    </module>
    <!--module name="NoArrayTrailingComma"/-->
    <module name="NoClone"/>
    <!--module name="NoEnumTrailingComma"/-->
    <module name="NoFinalizer"/>
    <module name="OneStatementPerLine"/>
    <module name="PackageDeclaration"/>
    <module name="ParameterAssignment">
      <property name="severity" value="warning"/>
    </module>
    <module name="RequireThis">
      <property name="checkMethods" value="false"/>
      <property name="validateOnlyOverlapping" value="false"/>
    </module>
    <module name="ReturnCount">
      <property name="max" value="${checkstyle.ReturnCount.max}" default="10"/>
      <property name="severity" value="warning"/>
    </module>
    <module name="SimplifyBooleanExpression"/>
    <module name="SimplifyBooleanReturn"/>
    <module name="StringLiteralEquality"/>
    <!--module name="SuperClone"/-->
    <!--module name="SuperFinalize"/-->
    <!--module name="UnnecessaryParentheses"/-->
    <module name="UnnecessarySemicolonAfterOuterTypeDeclaration"/>
    <module name="UnnecessarySemicolonAfterTypeMemberDeclaration"/>
    <!--module name="UnnecessarySemicolonInEnumeration"/-->
    <module name="UnnecessarySemicolonInTryWithResources"/>
    <module name="UnusedLocalVariable"/>
    <module name="VariableDeclarationUsageDistance">
      <property name="allowedDistance" value="25"/>
    </module>

    <!-- Checks for Duplicate Code (@see Checker module)-->

    <!-- Checks for Headers -->
    <!--module name="Header"/-->

    <!-- Checks for Imports -->
    <module name="AvoidStarImport"/>
    <!--module name="AvoidStaticImport"/-->
    <module name="CustomImportOrder">
      <property name="customImportOrderRules"
                value="STATIC###STANDARD_JAVA_PACKAGE###THIRD_PARTY_PACKAGE"/>
      <property name="separateLineBetweenGroups" value="true"/>
      <property name="sortImportsInGroupAlphabetically" value="true"/>
      <property name="standardPackageRegExp" value="^java\."/>
    </module>
    <module name="IllegalImport"/> <!-- defaults to sun.* packages -->
    <!--module name="ImportControl"/-->
    <module name="ImportOrder">
      <property name="groups" value="${checkstyle.ImportOrder.groups}" default="java, javax, junit, io, com, net, org"/>
      <property name="option" value="${checkstyle.ImportOrder.option}" default="top"/>
      <property name="ordered" value="${checkstyle.ImportOrder.ordered}" default="true"/>
      <property name="separated" value="${checkstyle.ImportOrder.separated}" default="true"/>
      <property name="sortStaticImportsAlphabetically" value="${checkstyle.ImportOrder.sortStaticImportsAlphabetically}" default="true"/>
    </module>
    <module name="RedundantImport"/>
    <module name="UnusedImports"/>

    <!-- Checks for Javadoc Comments -->
    <module name="AtclauseOrder">
      <property name="tagOrder" value="@author, @param, @return, @throws, @exception, @serial, @serialData, @serialField, @see, @since, @version, @deprecated"/>
    </module>
    <!--module name="InvalidJavadocPosition"/-->
    <module name="JavadocBlockTagLocation"/>
    <module name="JavadocContentLocation"/>
    <module name="JavadocMethod">
      <property name="accessModifiers" value="public, protected, package"/>
    </module>
    <module name="JavadocMissingLeadingAsterisk"/>
    <module name="JavadocMissingWhitespaceAfterAsterisk"/>
    <!--module name="JavadocParagraph">
      <property name="allowNewlineParagraph" value="false"/>
      <property name="violateExecutionOnNonTightHtml" value="true"/>
    </module-->
    <module name="JavadocStyle">
      <property name="severity" value="warning"/>
    </module>
    <!--module name="JavadocTagContinuationIndentation"/-->
    <module name="JavadocType"/>
    <module name="JavadocMethod"/>
    <module name="JavadocVariable">
      <property name="ignoreNamePattern" value="[A-Z0-9_]+"/>
      <property name="scope" value="public"/>
      <property name="severity" value="warning"/>
    </module>
    <module name="MissingJavadocMethod">
      <property name="ignoreMethodNamesRegex" value="main"/>
    </module>
    <!--module name="MissingJavadocPackage"/-->
    <module name="MissingJavadocType"/>
    <module name="NonEmptyAtclauseDescription"/>
    <module name="RequireEmptyLineBeforeBlockTagGroup"/>
    <!--module name="SingleLineJavadoc"/-->
    <module name="SummaryJavadoc">
      <property name="violateExecutionOnNonTightHtml" value="false"/>
    </module>
    <!--module name="WriteTag"/-->

    <!-- Checks for Metrics -->
    <module name="BooleanExpressionComplexity">
      <property name="max" value="${checkstyle.BooleanExpressionComplexity.max}" default="5"/>
      <property name="severity" value="warning"/>
    </module>
    <module name="ClassDataAbstractionCoupling">
      <property name="excludeClassesRegexps" value="ElementsExceptionsFactory"/>
      <property name="max" value="10"/>
      <property name="severity" value="warning"/>
    </module>
    <module name="ClassFanOutComplexity">
      <property name="severity" value="warning"/>
    </module>
    <module name="CyclomaticComplexity">
      <property name="max" value="${checkstyle.CyclomaticComplexity.max}" default="10"/>
    </module>
    <module name="JavaNCSS">
      <property name="classMaximum" value="${checkstyle.JavaNCSS.classMaximum}" default="5000"/>
      <property name="fileMaximum" value="${checkstyle.JavaNCSS.fileMaximum}" default="10000"/>
      <property name="methodMaximum" value="${checkstyle.JavaNCSS.methodMaximum}" default="60"/>
      <property name="recordMaximum" value="${checkstyle.JavaNCSS.recordMaximum}" default="1000"/>
      <property name="severity" value="warning"/>
    </module>
    <module name="NPathComplexity">
      <property name="max" value="${checkstyle.NPathComplexity.max}" default="200"/>
    </module>

    <!-- Checks for the Miscellaneous -->
    <module name="ArrayTypeStyle"/>
    <!--module name="AvoidEscapedUnicodeCharacters"/-->
    <module name="CommentsIndentation"/>
    <module name="DescendantToken"> <!-- Explicitly check for return statements in a finally clause of a try/catch block -->
      <property name="tokens" value="LITERAL_FINALLY"/>
      <property name="limitedTokens" value="LITERAL_RETURN"/>
      <property name="minimumDepth" value="1"/>
      <property name="maximumNumber" value="0"/>
    </module>
    <module name="DescendantToken"> <!-- number of return statement in a method -->
      <property name="tokens" value="METHOD_DEF"/>
      <property name="limitedTokens" value="LITERAL_RETURN"/>
      <property name="maximumNumber" value="${checkstyle.method.return.statements}" default="5"/>
      <property name="severity" value="warning"/>
    </module>
    <module name="DescendantToken"> <!-- no DEFAULT in a switch statement -->
      <property name="tokens" value="LITERAL_SWITCH"/>
      <property name="limitedTokens" value="LITERAL_DEFAULT"/>
      <property name="maximumDepth" value="2"/>
      <property name="minimumNumber" value="1"/>
      <property name="severity" value="warning"/>
    </module>
    <!--module name="FinalParameters"/-->
    <module name="Indentation">
      <property name="arrayInitIndent" value="${checkstyle.Indentation.arrayInitIdent}" default="2"/>
      <property name="basicOffset" value="${checkstyle.Indentation.basicOffset}" default="2"/>
      <property name="braceAdjustment" value="${checkstyle.Indentation.braceAdjustment}" default="0"/>
      <property name="caseIndent" value="${checkstyle.Indentation.caseIndent}" default="2"/>
      <property name="lineWrappingIndentation" value="${checkstyle.Indentation.lineWrappingIndentation}" default="2"/>
      <property name="throwsIndent" value="${checkstyle.Indentation.throwIndent}" default="2"/>
    </module>
    <module name="OuterTypeFilename"/>
    <module name="TodoComment">
      <property name="format" value="TODO(:)?"/>
      <property name="severity" value="warning"/>
    </module>
    <!--module name="TrailingComment"/-->
    <!--module name="UncommentedMain"/-->
    <module name="UpperEll"/>

    <!-- Checks for Modifiers -->
    <!--module name="ClassMemberImpliedModifier"/-->
    <!--module name="InterfaceMemberImpliedModifier"/-->
    <module name="ModifierOrder"/>
    <module name="RedundantModifier">
      <property name="tokens" value="METHOD_DEF,VARIABLE_DEF,ANNOTATION_FIELD_DEF"/>
      <property name="severity" value="warning"/>
    </module>

    <!--  Checks for Naming Conventions -->
    <module name="AbbreviationAsWordInName">
      <property name="allowedAbbreviationLength" value="4"/>
      <property name="ignoreFinal" value="false"/>
      <property name="ignoreStatic" value="false"/>
      <property name="ignoreStaticFinal" value="true"/>
    </module>
    <module name="AbstractClassName">
      <property name="format" value="^(?!.+Exception|.+Extension(s)?|.+Factory|.+Utils)(Abstract.+)$"/>
    </module>
    <module name="CatchParameterName">
      <property name="format" value="[a-zA-Z]{3,}"/>
    </module>
    <module name="ClassTypeParameterName">
      <property name="format" value="^[A-Z]+$"/>
    </module>
    <module name="ConstantName"/>
    <module name="IllegalIdentifierName"/>
    <module name="InterfaceTypeParameterName">
      <property name="format" value="^[A-Z]+$"/>
    </module>
    <module name="LambdaParameterName"/>
    <module name="LocalFinalVariableName"/>
    <module name="LocalVariableName"/>
    <module name="MemberName"/>
    <module name="MethodName">
      <property name="format" value="^[a-z\$][a-zA-Z0-9]*$"/>
    </module>
    <module name="MethodTypeParameterName">
      <property name="format" value="^[A-Z]+$"/>
    </module>
    <module name="PackageName">
      <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
    </module>
    <module name="ParameterName"/>
    <module name="PatternVariableName"/>
    <module name="RecordComponentName"/>
    <module name="RecordTypeParameterName"/>
    <module name="StaticVariableName"/>
    <module name="TypeName"/>

    <!-- Checks for Regular Expressions (@see Checker module) -->
    <module name="Regexp"/>
    <!--module name="RegexpOnFilename"/-->
    <module name="RegexpSinglelineJava">
      <property name="format" value="System\.(out)|(err)\.print(ln)?\("/>
      <property name="ignoreCase" value="false"/>
      <property name="ignoreComments" value="true"/>
      <property name="maximum" value="0"/>
      <property name="severity" value="warning"/>
    </module>
    <module name="RegexpSinglelineJava">
      <property name="format" value="e\.printStackTrace\(\)"/>
      <property name="ignoreCase" value="false"/>
      <property name="ignoreComments" value="true"/>
      <property name="maximum" value="0"/>
      <property name="severity" value="warning"/>
    </module>

    <!-- Checks for Size Violations -->
    <module name="AnonInnerLength">
      <property name="max" value="60"/>
    </module>
    <module name="ExecutableStatementCount">
      <property name="severity" value="warning"/>
    </module>
    <module name="MethodCount">
      <property name="maxPrivate" value="500"/>
      <property name="maxPackage" value="500"/>
      <property name="maxProtected" value="500"/>
      <property name="maxPublic" value="500"/>
      <property name="maxTotal" value="500"/>
    </module>
    <module name="MethodLength">
      <property name="max" value="${checkstyle.MethodLength.max}" default="60"/>
      <property name="severity" value="warning"/>
    </module>
    <module name="OuterTypeNumber"> <!-- Useful for Unit/Integration Tests that define helper classes -->
      <property name="max" value="10"/>
    </module>
    <module name="ParameterNumber">
      <property name="max" value="${checkstyle.ParameterNumber.max}" default="10"/>
      <property name="severity" value="warning"/>
    </module>
    <module name="RecordComponentNumber"/>

    <!-- Check for Whitespace -->
    <!--module name="EmptyForInitializerPad"/-->
    <!--module name="EmptyForIteratorPad"/-->
    <module name="GenericWhitespace"/>
    <module name="MethodParamPad"/>
    <module name="NoLineWrap"/>
    <module name="NoWhitespaceAfter">
      <property name="tokens" value="AT, INC, DEC, UNARY_MINUS, UNARY_PLUS, BNOT, LNOT, DOT, INDEX_OP"/>
    </module>
    <module name="NoWhitespaceBefore"/>
    <module name="NoWhitespaceBeforeCaseDefaultColon"/>
    <module name="OperatorWrap"/>
    <module name="ParenPad"/>
    <!--module name="SeparatorWrap"/-->
    <module name="SingleSpaceSeparator"/>
    <module name="TypecastParenPad"/>
    <module name="WhitespaceAfter"/>
    <module name="WhitespaceAround"/>

    <module name="SuppressWarningsHolder"/>

  </module>

</module>
