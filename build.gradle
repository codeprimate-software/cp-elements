buildscript {
  repositories {
    mavenCentral()
  }
}

plugins {
  id "io.freefair.lombok" version "6.6.1"
}

apply plugin: 'java'
apply plugin: 'idea'

description = "Codeprimate Elements Java library and micro-framework."
group = "org.codeprimate"

//sourceCompatibility = 1.8
//targetCompatibility = 1.8

tasks.withType(Test).all {
  systemProperties['gradle.build'] = true
}

repositories {
  mavenCentral()
}

dependencies {

  if (JavaVersion.current().isJava8()) {
    implementation files(System.getProperty("java.home") + "/../lib/tools.jar")
  }

  testImplementation "org.assertj:assertj-core:$assertjVersion"
  testImplementation "org.hamcrest:hamcrest-core:$hamcrestVersion"
  testImplementation "org.hamcrest:hamcrest-library:$hamcrestVersion"
  testImplementation "junit:junit:$junitVersion"
  testImplementation "org.projectlombok:lombok:$lombokVersion"
  testImplementation "org.mockito:mockito-core:$mockitoVersion"
  testImplementation "org.mockito:mockito-inline:$mockitoVersion"
  testImplementation "edu.umd.cs.mtc:multithreadedtc:$multithreadedtcVersion"

}

jar {
  baseName = "$rootProject.name"
  version = "$version"
  manifest {
    attributes('Main-Class' : 'org.cp.elements.ElementsVersion')
    attributes('Automatic-Module-Name' : 'org.codeprimate.elements')
  }
}

test {
  testLogging {
    afterSuite { desc, result ->
      if (!desc.parent) { // matches outermost test suite
        println "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
      }
    }
  }
}
